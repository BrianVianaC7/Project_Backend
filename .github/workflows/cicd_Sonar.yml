name: Java CI/CD with SonarQube and MySQL

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: Cuetzala1
          MYSQL_DATABASE: soccer_db
          MYSQL_USER: root
          MYSQL_PASSWORD: Cuetzala1
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up JDK 21
      uses: actions/setup-java@v2
      with:
        java-version: '21'

    - name: Cache Gradle dependencies
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build with Gradle
      run: ./gradlew build --info

    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v1
      with:
        projectKey: 'BrianVianaC7_Project_Backend' # Replace with your SonarQube project key
        projectName: 'Project_Backend' # Replace with your project name
        organization: 'projectbackendteam7' # Replace with your SonarQube organization key
        token: 'e28ef18ff7e43f594d70fad43eb1108fbc37d0e5' # Ensure you have set up a secret named SONAR_TOKEN with your SonarQube token
        scannerVersion: '4.6.0'
